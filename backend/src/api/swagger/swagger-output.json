{
  "swagger": "2.0",
  "info": {
    "title": "Footballmarketplace",
    "description": "RestAPI of the football marketplace",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/services/getAdmittedServices": {
      "get": {
        "description": "Will return the admitted services tied to a specific ethereum address.",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "Ethereum address of wallet requesting list.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/services/getServiceRequests": {
      "get": {
        "description": "Will return the requested service creations tied to a specific ethereum address.",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "Ethereum address of wallet requesting list.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/services/buy": {
      "post": {
        "description": "Will buy a given service with an ethereum address.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Ethereum address of buyer and service name.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string",
                  "example": "0xdB055877e6c13b6A6B25aBcAA29B393777dD0a73"
                },
                "name": {
                  "type": "string",
                  "example": "Service Name Example"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/services/getallservices": {
      "get": {
        "description": "Will return all admitted services given an ethereum address.",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "Ethereum address of wallet requesting list.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/services/requestRegisterService": {
      "post": {
        "description": "Will put in a new service request.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Ethereum address of buyer and service name.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string",
                  "example": "0xdB055877e6c13b6A6B25aBcAA29B393777dD0a73"
                },
                "name": {
                  "type": "string",
                  "example": "Service Name Example."
                },
                "description": {
                  "type": "string",
                  "example": "Service Description Example."
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/services/admitservice": {
      "post": {
        "description": "Will admit a service.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Ethereum address of buyer and service name.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Service Name Example."
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/users/register": {
      "post": {
        "description": "API endpoint to register a new user in the database.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Ethereum address of buyer and service name.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "Usernameeample"
                },
                "address": {
                  "type": "string",
                  "example": "0xdB055877e6c13b6A6B25aBcAA29B393777dD0a73"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/users/registercoach": {
      "post": {
        "description": "API endpoint to register a new coach in the database.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Ethereum address of buyer and service name.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "Usernameeample"
                },
                "address": {
                  "type": "string",
                  "example": "0xdB055877e6c13b6A6B25aBcAA29B393777dD0a73"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/users/getusername": {
      "get": {
        "description": "API endpoint to get a username given an ethereum address.",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "Ethereum address of wallet requesting.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/getcontractaddress": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    }
  }
}